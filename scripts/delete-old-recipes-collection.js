import dotenv from "dotenv";
dotenv.config();

import mongoose from "mongoose";

async function deleteOldRecipesCollection() {
  try {
    const mongoUri = process.env.MONGODB_URI || "mongodb://localhost:27017/chef-ses";
    await mongoose.connect(mongoUri, {
      useNewUrlParser: true,
      useUnifiedTopology: true,
      serverSelectionTimeoutMS: 10000,
    });
    
    console.log("‚úÖ Connect√© √† MongoDB\n");

    const db = mongoose.connection.db;
    
    // V√©rifier que la collection existe
    const collections = await db.listCollections({ name: 'recipes' }).toArray();
    
    if (collections.length === 0) {
      console.log("‚ö†Ô∏è  La collection 'recipes' n'existe pas ou a d√©j√† √©t√© supprim√©e.");
      return;
    }

    // Compter les documents avant suppression
    const oldCollection = db.collection('recipes');
    const count = await oldCollection.countDocuments();
    
    console.log(`üìä Collection 'recipes' trouv√©e: ${count} documents`);
    console.log("\n‚ö†Ô∏è  ATTENTION: Cette action est IRR√âVERSIBLE !");
    console.log("   Toutes les donn√©es de la collection 'recipes' seront supprim√©es.\n");
    
    // V√©rification de s√©curit√© finale
    console.log("üîç V√©rification finale avant suppression...\n");
    
    const newCollection = db.collection('recipeenricheds');
    const newCount = await newCollection.countDocuments();
    
    console.log(`‚úÖ Collection 'recipeenricheds': ${newCount} documents`);
    console.log(`‚ùå Collection 'recipes': ${count} documents\n`);
    
    if (newCount < count) {
      console.log("‚ö†Ô∏è  AVERTISSEMENT: recipeenricheds a MOINS de documents que recipes !");
      console.log(`   Diff√©rence: ${count - newCount} recettes`);
      console.log("\n‚ùå Suppression annul√©e par s√©curit√©.");
      console.log("üí° Veuillez v√©rifier que toutes les recettes ont bien √©t√© migr√©es.");
      return;
    }
    
    // Supprimer la collection
    console.log("üóëÔ∏è  Suppression de la collection 'recipes'...");
    await oldCollection.drop();
    
    console.log("\n" + "=".repeat(60));
    console.log("‚úÖ Collection 'recipes' supprim√©e avec succ√®s !");
    console.log("=".repeat(60));
    
    // V√©rifier les collections restantes
    const remainingCollections = await db.listCollections().toArray();
    console.log(`\nüìö Collections restantes dans la base de donn√©es:`);
    remainingCollections.forEach(col => {
      console.log(`  - ${col.name}`);
    });
    
    console.log(`\n‚ú® Nettoyage termin√© !`);
    console.log(`üìä La collection 'recipeenricheds' contient maintenant ${newCount} recettes.`);

  } catch (error) {
    console.error("‚ùå Erreur:", error);
  } finally {
    await mongoose.connection.close();
    console.log("\nüîå D√©connexion de MongoDB");
  }
}

console.log("üöÄ Suppression de l'ancienne collection 'recipes'...\n");
deleteOldRecipesCollection();

