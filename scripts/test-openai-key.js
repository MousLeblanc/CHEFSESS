// scripts/test-openai-key.js
import OpenAI from 'openai';
import dotenv from 'dotenv';

// Charger les variables d'environnement
dotenv.config();

const apiKey = process.env.OPENAI_API_KEY;

console.log('\n=== TEST DE LA CL√â API OPENAI ===\n');

if (!apiKey) {
  console.error('‚ùå ERREUR: Aucune cl√© API trouv√©e dans .env');
  console.log('Veuillez ajouter OPENAI_API_KEY dans votre fichier .env\n');
  process.exit(1);
}

console.log('‚úì Cl√© API trouv√©e dans .env');
console.log(`‚úì Cl√© commence par: ${apiKey.substring(0, 15)}...`);
console.log(`‚úì Cl√© se termine par: ...${apiKey.slice(-6)}\n`);

console.log('üîÑ Test de connexion √† OpenAI...\n');

const openai = new OpenAI({ apiKey });

try {
  // Test simple avec le mod√®le le moins cher
  const response = await openai.chat.completions.create({
    model: 'gpt-3.5-turbo',
    messages: [{ role: 'user', content: 'Dis juste "OK"' }],
    max_tokens: 5,
  });

  console.log('‚úÖ SUCC√àS! La cl√© API est valide.');
  console.log('‚úÖ Connexion √† OpenAI √©tablie.');
  console.log(`‚úÖ R√©ponse re√ßue: ${response.choices[0].message.content}\n`);
  console.log('üéâ Votre syst√®me de g√©n√©ration de menus IA est op√©rationnel!\n');
  
} catch (error) {
  console.error('‚ùå √âCHEC: La cl√© API ne fonctionne pas.\n');
  console.error('Erreur:', error.message);
  
  if (error.status === 401) {
    console.log('\nüìù ACTIONS √Ä FAIRE:');
    console.log('1. Allez sur: https://platform.openai.com/api-keys');
    console.log('2. Cr√©ez une nouvelle cl√© API');
    console.log('3. Remplacez OPENAI_API_KEY dans votre fichier .env');
    console.log('4. Red√©marrez le serveur\n');
  } else if (error.status === 429) {
    console.log('\n‚ö†Ô∏è  Vous avez d√©pass√© votre quota ou manquez de cr√©dits.');
    console.log('V√©rifiez: https://platform.openai.com/usage\n');
  }
  
  console.log('‚ÑπÔ∏è  EN ATTENDANT: Le syst√®me fonctionne en mode FALLBACK');
  console.log('   (s√©lection al√©atoire avec filtrage strict des allerg√®nes)\n');
  
  process.exit(1);
}

